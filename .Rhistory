AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + BsmtFinSF1 + TotalBsmtSF + GrLivArea, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + BsmtFinSF1 + TotalBsmtSF + GrLivArea + Fireplaces, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + BsmtFinSF1 + TotalBsmtSF + GrLivArea + Fireplaces+ CentralAir, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearRemodAdd + BsmtFinSF1 + TotalBsmtSF + GrLivArea + Fireplaces, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + BsmtFinSF1 + TotalBsmtSF + GrLivArea + Fireplaces, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + BsmtFinSF1 + TotalBsmtSF + GrLivArea + Fireplaces + CentralAir, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + BsmtFinSF1 + TotalBsmtSF + GrLivArea + Fireplaces + KitchenQual, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + BsmtFinSF1 + TotalBsmtSF + GrLivArea + Fireplaces + KitchenQual + GarageQual, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + BsmtFinSF1 + TotalBsmtSF + GrLivArea + Fireplaces + KitchenQual + Neighborhood, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + OverallQual + OverallCond + YearBuilt + BsmtFinSF1 + TotalBsmtSF + GrLivArea + Fireplaces + KitchenQual , data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + OverallQual + OverallCond + YearBuilt + BsmtFinSF1 + TotalBsmtSF + GrLivArea + Fireplaces , data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
reduced_model = lm(LogSalePrice ~ MSZoning + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Fireplaces + KitchenQual , data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
reduced_model = lm(LogSalePrice ~ MSZoning , data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + OverallQual, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
plot(reduced_model)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Fireplaces + KitchenQual , data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea+ OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Fireplaces + KitchenQual , data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea+ OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + KitchenQual , data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea+ OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea , data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea +GarageCars, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood+ LotConfig, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
View(test)
View(trainImputed)
min(trainImputed$LogSalePrice)
row(min(trainImputed$LogSalePrice))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood+ CentralAir, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood+ CentralAir+ GarageCars, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood+ CentralAir+ GarageCars, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood + CentralAir+ GarageCars, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood + CentralAir+ GarageCars + Fireplaces, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + Neighborhood + CentralAir+ GarageCars + Fireplaces, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood + CentralAir + GarageCars + Fireplaces, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood + GarageCars + Fireplaces, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
par(mfrow=c(2,2))
plot(lasso)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood + GarageCars + Fireplaces, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
lasso=train(LogSalePrice~., trainPP, method='glmnet', tuneGrid=expand.grid(alpha=1,lambda=seq(0.01,0.1,length=10)))
lasso$bestTune
varImp(lasso,scale=F)
train <- train[ !(train$Id %in% c(1299,524)), ]
train$LogSalePrice <- log(train$SalePrice)
load("/Users/adrientoulouse/Desktop/Cours/1st Semester/Regression/House_prices_project/DataProject.RData")
train <- train[ !(train$Id %in% c(1299,524)), ]
train$LogSalePrice <- log(train$SalePrice)
test$LogSalePrice <- log(test$SalePrice)
train <- select(train, -c("SalePrice", "Id"))
test<- select(test, -c("SalePrice", "Id"))
Ytrain = train$LogSalePrice
Ytest = test$LogSalePrice
lasso=train(LogSalePrice~., train, method='glmnet', tuneGrid=expand.grid(alpha=1,lambda=0.01))
lasso
fittedTest=predict(lasso, newdata = test)
RMSE_lasso_test=sqrt(mean((predict(lasso, newdata = test)-Ytest)^2))
print(RMSE_lasso_test)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood + GarageCars + Fireplaces, data = trainPP[-c(524, 1299),])
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
load("/Users/adrientoulouse/Desktop/Cours/1st Semester/Regression/House_prices_project/DataProject.RData")
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
library(pls)
library(caret)
library(glmnet)
trainImputed <- read.csv(file='train_imputed.csv')
trainPP <- read.csv(file='train_preprocessed.csv')
par(mfrow=c(2,1))
plot(density(trainImputed$SalePrice), main='SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice", "X")) #X is unrelated to our study
plot(density(trainImputed$LogSalePrice), main='Log SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
var.numeric <- colnames(trainPP)[sapply(trainPP, is.numeric)]
trainPP %>%
select(var.numeric) %>%
cor() %>%
corrplot(method = 'color', order = "hclust", tl.pos = 'n') %>%
heatmap (symm=T)
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
library(pls)
library(caret)
library(glmnet)
trainImputed <- read.csv(file='train_imputed.csv')
trainPP <- read.csv(file='train_preprocessed.csv')
par(mfrow=c(2,1))
plot(density(trainImputed$SalePrice), main='SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice", "X")) #X is unrelated to our study
plot(density(trainImputed$LogSalePrice), main='Log SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
#var.numeric <- colnames(trainPP)[sapply(trainPP, is.numeric)]
#
#trainPP %>%
#  select(var.numeric) %>%
#  cor() %>%
#  corrplot(method = 'color', order = "hclust", tl.pos = 'n') %>%
#  heatmap (symm=T)
ggplot(trainImputed, aes(YearBuilt, YearRemodAdd)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = MSZoning))
res.aov <- aov(LogSalePrice ~ MSZoning, data = trainImputed)
summary(res.aov)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = GarageQual))
res.aov <- aov(LogSalePrice ~ GarageQual, data = trainImputed)
summary(res.aov)
table(trainImputed$RoofMatl)
table(trainImputed$Condition2)
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogGrLivArea, color = MSZoning, fill = MSZoning)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
trainPP$LogSalePrice <- log(trainPP$SalePrice)
trainPP <- select(trainPP, -c("SalePrice", "X")) #X is not related to our study
full_model = lm(LogSalePrice ~ ., data = trainPP)
summary(full_model)
#summary(full_model)$coefficient[,4]
AIC(full_model)
par(mfrow=c(2,2))
plot(full_model)
acf(residuals(full_model), main='Auto-correlation plot')
ncvTest(full_model)
durbinWatsonTest(full_model)
shapiro.test(residuals(full_model))
outlierTest(full_model)
reg0=lm(LogSalePrice~1,data=trainPP)
select.variables.forward = step(reg0, LogSalePrice~MSSubClass+MSZoning+LotFrontage+LotArea+Street+LotShape+LandContour+Utilities+LotConfig+LandSlope+Neighborhood+Condition1+Condition2+BldgType+HouseStyle+OverallQual+OverallCond+YearBuilt+YearRemodAdd+RoofStyle+RoofMatl+Exterior1st+Exterior2nd+MasVnrType+MasVnrArea+ExterQual+ExterCond+Foundation+BsmtQual+BsmtCond+BsmtExposure+BsmtFinType1+BsmtFinSF1+BsmtFinType2+BsmtUnfSF+TotalBsmtSF+Heating+HeatingQC+CentralAir+Electrical+X1stFlrSF+X2ndFlrSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+HalfBath+BedroomAbvGr+KitchenQual+TotRmsAbvGrd+Functional+Fireplaces+GarageType+GarageYrBlt+GarageFinish+GarageCars+GarageArea+GarageQual+GarageCond+PavedDrive+WoodDeckSF+OpenPorchSF+MoSold+YrSold+SaleType+SaleCondition, data=trainPP, trace=FALSE, direction=c('forward'))
summary(select.variables.forward)
reg0=lm(LogSalePrice~1,data=trainPP)
select.variables.both = step(reg0, LogSalePrice~MSSubClass+MSZoning+LotFrontage+LotArea+Street+LotShape+LandContour+Utilities+LotConfig+LandSlope+Neighborhood+Condition1+Condition2+BldgType+HouseStyle+OverallQual+OverallCond+YearBuilt+YearRemodAdd+RoofStyle+RoofMatl+Exterior1st+Exterior2nd+MasVnrType+MasVnrArea+ExterQual+ExterCond+Foundation+BsmtQual+BsmtCond+BsmtExposure+BsmtFinType1+BsmtFinSF1+BsmtFinType2+BsmtUnfSF+TotalBsmtSF+Heating+HeatingQC+CentralAir+Electrical+X1stFlrSF+X2ndFlrSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+HalfBath+BedroomAbvGr+KitchenQual+TotRmsAbvGrd+Functional+Fireplaces+GarageType+GarageYrBlt+GarageFinish+GarageCars+GarageArea+GarageQual+GarageCond+PavedDrive+WoodDeckSF+OpenPorchSF+MoSold+YrSold+SaleType+SaleCondition, data=trainPP, trace=FALSE, direction=c('both'))
summary(select.variables.both)
select.variables.backward = step(full_model, scope= ~1, direction=c("backward"), trace=FALSE)
summary(select.variables.backward)
AIC(select.variables.forward)
AIC(select.variables.both)
AIC(select.variables.backward)
par(mfrow=c(2,2))
plot(select.variables.forward)
acf(residuals(select.variables.forward), main='Auto-correlation plot')
ncvTest(select.variables.forward)
durbinWatsonTest(select.variables.forward)
shapiro.test(residuals(select.variables.forward))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood + GarageCars + Fireplaces, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
outlierTest(reduced_model)
influenceIndexPlot(reduced_model)
lasso=train(LogSalePrice~., trainPP, method='glmnet', tuneGrid=expand.grid(alpha=1,lambda=seq(0.01,0.1,length=10)))
lasso$bestTune
varImp(lasso,scale=F)
train <- train[ !(train$Id %in% c(1299,524)), ]
train$LogSalePrice <- log(train$SalePrice)
test$LogSalePrice <- log(test$SalePrice)
train <- select(train, -c("SalePrice", "Id"))
test<- select(test, -c("SalePrice", "Id"))
Ytrain = train$LogSalePrice
Ytest = test$LogSalePrice
lasso=train(LogSalePrice~., train, method='glmnet', tuneGrid=expand.grid(alpha=1,lambda=0.01))
lasso
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + TotalBsmtSF + GrLivArea + Neighborhood + GarageCars + Fireplaces, data = trainPP[-c(524, 1299),])
RMSE_lm_test=sqrt(mean((predict(reduced_model, newdata = test)-Ytest)^2))
print(RMSE_lm_test)
knitr::opts_chunk$set(fig.width=13, fig.height=5.5)
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
library(pls)
library(caret)
library(glmnet)
trainImputed <- read.csv(file='train_imputed.csv')
trainPP <- read.csv(file='train_preprocessed.csv')
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice", "X")) #X is unrelated to our study
trainPP$LogSalePrice <- log(trainPP$SalePrice)
trainPP <- select(trainPP, -c("SalePrice", "X")) #X is not related to our study
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = MSZoning))
res.aov <- aov(LogSalePrice ~ MSZoning, data = trainImputed)
summary(res.aov)
table(trainImputed$RoofMatl)
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogGrLivArea, color = MSZoning, fill = MSZoning)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
full_model = lm(LogSalePrice ~ ., data = trainPP)
par(mfrow=c(2,2))
plot(full_model)
acf(residuals(full_model), main='Auto-correlation plot')
select.variables.backward = step(full_model, scope= ~1, direction=c("backward"), trace=FALSE)
par(mfrow=c(2,2))
plot(select.variables.backward)
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt
+ TotalBsmtSF + GrLivArea + Neighborhood + GarageCars + Fireplaces,
data = trainPP[-c(524, 1299),])
AIC(reduced_model)
par(mfrow=c(2,2))
plot(reduced_model)
influenceIndexPlot(reduced_model)
lasso=train(LogSalePrice~., trainPP, method='glmnet', tuneGrid=expand.grid(alpha=1,lambda=seq(0.01,0.1,length=10)))
knitr::opts_chunk$set(fig.width=13, fig.height=5.5)
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
library(pls)
library(caret)
library(glmnet)
trainImputed <- read.csv(file='train_imputed.csv')
trainPP <- read.csv(file='train_preprocessed.csv')
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice", "X")) #X is unrelated to our study
trainPP$LogSalePrice <- log(trainPP$SalePrice)
trainPP <- select(trainPP, -c("SalePrice", "X")) #X is unrelated to our study
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("LotArea", "TotalBsmtSF", "GrLivArea"))
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = MSZoning))
res.aov <- aov(LogSalePrice ~ MSZoning, data = trainImputed)
summary(res.aov)
table(trainImputed$RoofMatl)
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogGrLivArea, color = MSZoning,
fill = MSZoning)) + geom_point() + theme_classic()
p + stat_smooth(method = "lm")
full_model = lm(LogSalePrice ~ ., data = trainPP)
par(mfrow=c(2,2))
plot(full_model)
influenceIndexPlot(lm(LogSalePrice ~ MSZoning + LotArea + OverallQual +
OverallCond + YearBuilt + TotalBsmtSF +
GrLivArea + Neighborhood + GarageCars + Fireplaces,
data = trainPP))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual +
OverallCond + YearBuilt + TotalBsmtSF +
GrLivArea + Neighborhood + GarageCars + Fireplaces,
data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
lasso=train(LogSalePrice~., trainPP, method='glmnet',
tuneGrid=expand.grid(alpha=1, lambda=seq(0.01,0.1,length=10)))
