p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogLotArea, color = Fireplaces, fill = GarageQual)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogLotArea, color = GarageQual, fill = GarageQual)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogLotArea, color = MSZoning, fill = MSZoning)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
ggplot(trainImputed, aes(TotalBsmtSF, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LotArea, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogLotArea, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LotFrontage, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(YearBuilt, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(YearRemodAdd, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(YearBuilt, YearRemodAdd)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(Fireplaces, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LotFrontage, Fireplaces)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, Fireplaces)) + geom_point() + geom_smooth(method=lm)
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
install.packages("lasso2")
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
trainImputed <- read.csv(file='train_imputed.csv')
trainPP <- read.csv (file='train_preprocessed.csv')
par(mfrow=c(2,1))
plot(density(trainImputed$SalePrice), main='SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice", "X")) #X is unrelated to our study
trainPP$LogSalePrice <- log(trainPP$SalePrice)
trainPP <- select(trainPP, -c("SalePrice")) #X is unrelated to our study
plot(density(trainImputed$LogSalePrice), main='Log SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
par(mfrow=c(1,2))
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth()
(ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = MSZoning)))
res.aov <- aov(LogSalePrice ~ MSZoning, data = trainImputed)
summary(res.aov)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = GarageQual))
res.aov <- aov(LogSalePrice ~ GarageQual, data = trainImputed)
summary(res.aov)
var.numeric <- colnames(trainImputed)[sapply(trainImputed, is.numeric)]
trainImputed %>%
select(var.numeric) %>%
cor() %>%
corrplot(method = 'color', order = "hclust", tl.pos = 'n') %>%
heatmap (symm=T)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(corrplot)
library(ggplot2)
trainImputed <- read.csv(file = 'train_imputed.csv')
trainPP <- read.csv(file = 'train_preprocessed.csv')
#str(trainImputed)
#summary(trainImputed)
par(mfrow=c(2,1))
plot(density(trainImputed$SalePrice))
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice"))
plot(density(trainImputed$LogSalePrice))
par(mfrow=c(2,1))
plot(density(trainImputed$LotArea))
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
plot(density(trainImputed$LogLotArea))
par(mfrow=c(2,1))
plot(density(trainImputed$TotalBsmtSF))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
plot(density(trainImputed$LogTotalBsmtSF))
par(mfrow=c(2,1))
plot(density(trainImputed$GrLivArea))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
plot(density(trainImputed$LogGrLivArea))
var.numeric <- colnames(trainPP)[sapply(trainPP, is.numeric)]
trainPP %>%
select(var.numeric) %>%
cor() %>%
corrplot(method = 'color', order = "hclust", tl.pos = 'n') %>%
heatmap (symm=T)
ggplot(trainImputed, aes(LotFrontage, LogLotArea)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, Fireplaces)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(YearBuilt, YearRemodAdd)) + geom_point() + geom_smooth(method=lm)
trainPP %>%
select(var.numeric) %>%
GGally::ggpairs(columns = c(length(var.numeric), 1:5))
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(OverallCond, LogSalePrice)) + geom_point()
ggplot(trainImputed, aes(LogTotalBsmtSF, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogLotArea, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LotFrontage, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(YearBuilt, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(YearRemodAdd, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(Fireplaces, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = CentralAir))
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = RoofMatl))
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = GarageQual))
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = MSZoning))
res.aov <- aov(LogSalePrice ~ MSZoning, data = trainImputed)
summary(res.aov)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = LotConfig))
res.aov <- aov(LogSalePrice ~ LotConfig, data = trainImputed)
summary(res.aov)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = Neighborhood))
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogGrLivArea, color = MSZoning, fill = MSZoning)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogTotalBsmtSF, color = CentralAir, fill = CentralAir)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogLotArea, color = MSZoning, fill = MSZoning)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
install.packages(c("glmnet", "pls"))
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
trainImputed <- read.csv(file='train_imputed.csv')
trainPP <- read.csv (file='train_preprocessed.csv')
par(mfrow=c(2,1))
plot(density(trainImputed$SalePrice), main='SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice", "X")) #X is unrelated to our study
trainPP$LogSalePrice <- log(trainPP$SalePrice)
trainPP <- select(trainPP, -c("SalePrice")) #X is unrelated to our study
plot(density(trainImputed$LogSalePrice), main='Log SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
var.numeric <- colnames(trainImputed)[sapply(trainImputed, is.numeric)]
trainImputed %>%
select(var.numeric) %>%
cor() %>%
corrplot(method = 'color', order = "hclust", tl.pos = 'n') %>%
heatmap (symm=T)
var.numeric <- colnames(trainPP)[sapply(trainPP, is.numeric)]
trainPP %>%
select(var.numeric) %>%
cor() %>%
corrplot(method = 'color', order = "hclust", tl.pos = 'n') %>%
heatmap (symm=T)
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
trainImputed <- read.csv(file='train_imputed.csv')
trainPP <- read.csv (file='train_preprocessed.csv')
par(mfrow=c(2,1))
plot(density(trainImputed$SalePrice), main='SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice", "X")) #X is unrelated to our study
trainPP$LogSalePrice <- log(trainPP$SalePrice)
trainPP <- select(trainPP, -c("SalePrice")) #X is unrelated to our study
plot(density(trainImputed$LogSalePrice), main='Log SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
var.numeric <- colnames(trainPP)[sapply(trainPP, is.numeric)]
trainPP %>%
select(var.numeric) %>%
cor() %>%
corrplot(method = 'color', order = "hclust", tl.pos = 'n') %>%
heatmap (symm=T)
ggplot(trainImputed, aes(YearBuilt, YearRemodAdd)) + geom_point() + geom_smooth(method=lm)
par(mfrow=c(1,2))
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = MSZoning))
res.aov <- aov(LogSalePrice ~ MSZoning, data = trainImputed)
summary(res.aov)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = GarageQual))
res.aov <- aov(LogSalePrice ~ GarageQual, data = trainImputed)
summary(res.aov)
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogGrLivArea, color = MSZoning, fill = MSZoning)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
full_model = lm(LogSalePrice ~ ., data = trainPP)
summary(full_model)
#summary(full_model)$coefficient[,4]
AIC(full_model)
par(mfrow=c(2,2))
plot(full_model)
acf(residuals(full_model), main='Auto-correlation plot')
ncvTest(full_model)
durbinWatsonTest(full_model)
shapiro.test(residuals(full_model))
outlierTest(full_model)
reg0=lm(LogSalePrice~1,data=trainPP)
select.variables.forward = step(reg0, LogSalePrice~MSSubClass+MSZoning+LotFrontage+LotArea+Street+LotShape+LandContour+Utilities+LotConfig+LandSlope+Neighborhood+Condition1+Condition2+BldgType+HouseStyle+OverallQual+OverallCond+YearBuilt+YearRemodAdd+RoofStyle+RoofMatl+Exterior1st+Exterior2nd+MasVnrType+MasVnrArea+ExterQual+ExterCond+Foundation+BsmtQual+BsmtCond+BsmtExposure+BsmtFinType1+BsmtFinSF1+BsmtFinType2+BsmtUnfSF+TotalBsmtSF+Heating+HeatingQC+CentralAir+Electrical+X1stFlrSF+X2ndFlrSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+HalfBath+BedroomAbvGr+KitchenQual+TotRmsAbvGrd+Functional+Fireplaces+GarageType+GarageYrBlt+GarageFinish+GarageCars+GarageArea+GarageQual+GarageCond+PavedDrive+WoodDeckSF+OpenPorchSF+MoSold+YrSold+SaleType+SaleCondition, data=trainPP, trace=FALSE, direction=c('forward'))
summary(select.variables.forward)
reg0=lm(LogSalePrice~1,data=trainPP)
select.variables.both = step(reg0, LogSalePrice~MSSubClass+MSZoning+LotFrontage+LotArea+Street+LotShape+LandContour+Utilities+LotConfig+LandSlope+Neighborhood+Condition1+Condition2+BldgType+HouseStyle+OverallQual+OverallCond+YearBuilt+YearRemodAdd+RoofStyle+RoofMatl+Exterior1st+Exterior2nd+MasVnrType+MasVnrArea+ExterQual+ExterCond+Foundation+BsmtQual+BsmtCond+BsmtExposure+BsmtFinType1+BsmtFinSF1+BsmtFinType2+BsmtUnfSF+TotalBsmtSF+Heating+HeatingQC+CentralAir+Electrical+X1stFlrSF+X2ndFlrSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+HalfBath+BedroomAbvGr+KitchenQual+TotRmsAbvGrd+Functional+Fireplaces+GarageType+GarageYrBlt+GarageFinish+GarageCars+GarageArea+GarageQual+GarageCond+PavedDrive+WoodDeckSF+OpenPorchSF+MoSold+YrSold+SaleType+SaleCondition, data=trainPP, trace=FALSE, direction=c('both'))
summary(select.variables.both)
select.variables.backward = step(full_model, scope= ~1, direction=c("backward"), trace=FALSE)
summary(select.variables.backward)
AIC(select.variables.forward)
AIC(select.variables.both)
AIC(select.variables.backward)
trainPP$LogLotArea <- log(trainPP$LotArea)
trainPP$LogTotalBsmtSF <- log(trainPP$TotalBsmtSF)
trainPP$LogGrLivArea <- log(trainPP$GrLivArea)
trainPP <- select(trainPP, -c("LotArea", "TotalBsmtSF", "GrLivArea"))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt + YearRemodAdd + RoofMatl + BsmtQual + BsmtFinSF1 + TotalBsmtSF + CentralAir + GrLivArea + KitchenQual + Fireplaces + GarageQual, data = trainPP[-c(53, 54, 307, 306, 524, 804, 1183, 458, 1325),])
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
trainImputed <- read.csv(file='train_imputed.csv')
trainPP <- read.csv (file='train_preprocessed.csv')
par(mfrow=c(2,1))
plot(density(trainImputed$SalePrice), main='SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice", "X")) #X is unrelated to our study
trainPP$LogSalePrice <- log(trainPP$SalePrice)
trainPP <- select(trainPP, -c("SalePrice")) #X is unrelated to our study
plot(density(trainImputed$LogSalePrice), main='Log SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
var.numeric <- colnames(trainPP)[sapply(trainPP, is.numeric)]
trainPP %>%
select(var.numeric) %>%
cor() %>%
corrplot(method = 'color', order = "hclust", tl.pos = 'n') %>%
heatmap (symm=T)
ggplot(trainImputed, aes(YearBuilt, YearRemodAdd)) + geom_point() + geom_smooth(method=lm)
par(mfrow=c(1,2))
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = MSZoning))
res.aov <- aov(LogSalePrice ~ MSZoning, data = trainImputed)
summary(res.aov)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = GarageQual))
res.aov <- aov(LogSalePrice ~ GarageQual, data = trainImputed)
summary(res.aov)
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogGrLivArea, color = MSZoning, fill = MSZoning)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
install.packages("tinytex")
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
trainImputed <- read.csv(file='train_imputed.csv')
trainPP <- read.csv (file='train_preprocessed.csv')
par(mfrow=c(2,1))
plot(density(trainImputed$SalePrice), main='SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice", "X")) #X is unrelated to our study
plot(density(trainImputed$LogSalePrice), main='Log SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
var.numeric <- colnames(trainPP)[sapply(trainPP, is.numeric)]
trainPP %>%
select(var.numeric) %>%
cor() %>%
corrplot(method = 'color', order = "hclust", tl.pos = 'n') %>%
heatmap (symm=T)
ggplot(trainImputed, aes(YearBuilt, YearRemodAdd)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = MSZoning))
res.aov <- aov(LogSalePrice ~ MSZoning, data = trainImputed)
summary(res.aov)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = GarageQual))
res.aov <- aov(LogSalePrice ~ GarageQual, data = trainImputed)
summary(res.aov)
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogGrLivArea, color = MSZoning, fill = MSZoning)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(corrplot)
library(ggplot2)
trainImputed <- read.csv(file = 'train_imputed.csv')
trainPP <- read.csv(file = 'train_preprocessed.csv')
ggplot(trainImputed, aes(LotFrontage, LogLotArea)) + geom_point() + geom_smooth(method=lm)
par(mfrow=c(2,1))
plot(density(trainImputed$SalePrice))
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice"))
plot(density(trainImputed$LogSalePrice))
par(mfrow=c(2,1))
plot(density(trainImputed$LotArea))
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
plot(density(trainImputed$LogLotArea))
par(mfrow=c(2,1))
plot(density(trainImputed$TotalBsmtSF))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
plot(density(trainImputed$LogTotalBsmtSF))
par(mfrow=c(2,1))
plot(density(trainImputed$GrLivArea))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
plot(density(trainImputed$LogGrLivArea))
ggplot(trainImputed, aes(LotFrontage, LogLotArea)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, Fireplaces)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(YearBuilt, YearRemodAdd)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(OverallCond, LogSalePrice)) + geom_point()
ggplot(trainImputed, aes(OverallCond, OverallQual)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogLotArea, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LotFrontage, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(YearBuilt, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(YearRemodAdd, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(Fireplaces, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(GrlivArea, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(GrLivArea, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogGrLivArea, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogGrLivArea, LogLotArea)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(BsmtQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = LotConfig))
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = BsmtQual))
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = KitchenQual))
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = RoofMatl))
ggplot(trainImputed, aes(BsmtQual, OverallQual)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(KitchenQual, OverallQual)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(KitchenQual, BasementQual)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(KitchenQual, BsmtQual)) + geom_point() + geom_smooth(method=lm)
library(dplyr)
library(corrplot)
library(ggplot2)
library(car)
library(lasso2)
trainImputed <- read.csv(file='train_imputed.csv')
trainPP <- read.csv (file='train_preprocessed.csv')
par(mfrow=c(2,1))
plot(density(trainImputed$SalePrice), main='SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogSalePrice <- log(trainImputed$SalePrice)
trainImputed <- select(trainImputed, -c("SalePrice", "X")) #X is unrelated to our study
plot(density(trainImputed$LogSalePrice), main='Log SalePrice density', sub='', xlab='', ylab='')
trainImputed$LogLotArea <- log(trainImputed$LotArea)
trainImputed <- select(trainImputed, -c("LotArea"))
trainImputed$LogTotalBsmtSF <- log(trainImputed$TotalBsmtSF)
trainImputed <- select(trainImputed, -c("TotalBsmtSF"))
trainImputed$LogGrLivArea <- log(trainImputed$GrLivArea)
trainImputed <- select(trainImputed, -c("GrLivArea"))
var.numeric <- colnames(trainPP)[sapply(trainPP, is.numeric)]
trainPP %>%
select(var.numeric) %>%
cor() %>%
corrplot(method = 'color', order = "hclust", tl.pos = 'n') %>%
heatmap (symm=T)
ggplot(trainImputed, aes(YearBuilt, YearRemodAdd)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(OverallQual, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(trainImputed, aes(LogTotalBsmtSF, LogSalePrice)) + geom_point() + geom_smooth(method=lm)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = MSZoning))
res.aov <- aov(LogSalePrice ~ MSZoning, data = trainImputed)
summary(res.aov)
ggplot(data = trainImputed) +
geom_boxplot(aes(y=LogSalePrice, x = GarageQual))
res.aov <- aov(LogSalePrice ~ GarageQual, data = trainImputed)
summary(res.aov)
p <- ggplot(trainImputed, aes(y=LogSalePrice, x=LogGrLivArea, color = MSZoning, fill = MSZoning)) +
geom_point() + theme_classic()
p + stat_smooth(method = "lm")
trainPP$LogSalePrice <- log(trainPP$SalePrice)
trainPP <- select(trainPP, -c("SalePrice", "X")) #X is not related to our study
full_model = lm(LogSalePrice ~ ., data = trainPP)
summary(full_model)
#summary(full_model)$coefficient[,4]
AIC(full_model)
par(mfrow=c(2,2))
plot(full_model)
acf(residuals(full_model), main='Auto-correlation plot')
ncvTest(full_model)
durbinWatsonTest(full_model)
shapiro.test(residuals(full_model))
outlierTest(full_model)
reg0=lm(LogSalePrice~1,data=trainPP)
select.variables.forward = step(reg0, LogSalePrice~MSSubClass+MSZoning+LotFrontage+LotArea+Street+LotShape+LandContour+Utilities+LotConfig+LandSlope+Neighborhood+Condition1+Condition2+BldgType+HouseStyle+OverallQual+OverallCond+YearBuilt+YearRemodAdd+RoofStyle+RoofMatl+Exterior1st+Exterior2nd+MasVnrType+MasVnrArea+ExterQual+ExterCond+Foundation+BsmtQual+BsmtCond+BsmtExposure+BsmtFinType1+BsmtFinSF1+BsmtFinType2+BsmtUnfSF+TotalBsmtSF+Heating+HeatingQC+CentralAir+Electrical+X1stFlrSF+X2ndFlrSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+HalfBath+BedroomAbvGr+KitchenQual+TotRmsAbvGrd+Functional+Fireplaces+GarageType+GarageYrBlt+GarageFinish+GarageCars+GarageArea+GarageQual+GarageCond+PavedDrive+WoodDeckSF+OpenPorchSF+MoSold+YrSold+SaleType+SaleCondition, data=trainPP, trace=FALSE, direction=c('forward'))
summary(select.variables.forward)
reg0=lm(LogSalePrice~1,data=trainPP)
select.variables.both = step(reg0, LogSalePrice~MSSubClass+MSZoning+LotFrontage+LotArea+Street+LotShape+LandContour+Utilities+LotConfig+LandSlope+Neighborhood+Condition1+Condition2+BldgType+HouseStyle+OverallQual+OverallCond+YearBuilt+YearRemodAdd+RoofStyle+RoofMatl+Exterior1st+Exterior2nd+MasVnrType+MasVnrArea+ExterQual+ExterCond+Foundation+BsmtQual+BsmtCond+BsmtExposure+BsmtFinType1+BsmtFinSF1+BsmtFinType2+BsmtUnfSF+TotalBsmtSF+Heating+HeatingQC+CentralAir+Electrical+X1stFlrSF+X2ndFlrSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+HalfBath+BedroomAbvGr+KitchenQual+TotRmsAbvGrd+Functional+Fireplaces+GarageType+GarageYrBlt+GarageFinish+GarageCars+GarageArea+GarageQual+GarageCond+PavedDrive+WoodDeckSF+OpenPorchSF+MoSold+YrSold+SaleType+SaleCondition, data=trainPP, trace=FALSE, direction=c('both'))
summary(select.variables.both)
select.variables.backward = step(full_model, scope= ~1, direction=c("backward"), trace=FALSE)
load("/Users/adrientoulouse/Desktop/Cours/1st Semester/Regression/House_prices_project/DataProject.RData")
summary(select.variables.backward)
AIC(select.variables.forward)
AIC(select.variables.both)
AIC(select.variables.backward)
par(mfrow=c(2,2))
plot(select.variables.forward)
acf(residuals(select.variables.forward), main='Auto-correlation plot')
ncvTest(select.variables.forward)
durbinWatsonTest(select.variables.forward)
shapiro.test(residuals(select.variables.forward))
reduced_model = lm(LogSalePrice ~ MSZoning + LotArea + OverallQual + OverallCond + YearBuilt +  BsmtQual + BsmtFinSF1 + TotalBsmtSF + CentralAir + GrLivArea + KitchenQual + Fireplaces + GarageQual, data = trainPP[-c(524, 1299),])
summary(reduced_model)
AIC(reduced_model)
#[-c(121, 272, 1276, 1299),]
par(mfrow=c(2,2))
plot(reduced_model)
acf(residuals(reduced_model), main='Auto-correlation plot')
ncvTest(reduced_model)
durbinWatsonTest(reduced_model)
shapiro.test(residuals(reduced_model))
outlierTest(reduced_model)
influenceIndexPlot(reduced_model)
library(pls)
library(caret)
library(glmnet)
lasso=train(LogSalePrice~., trainPP, method='glmnet', tuneGrid=expand.grid(alpha=1,lambda=seq(0.01,0.1,length=10)))
lasso$bestTune
varImp(lasso,scale=F)
#Import
lasso=train(SalePrice~., train, method='glmnet', tuneGrid=expand.grid(alpha=1,lambda=seq(0.01,0.1,length=10)))
lasso
fittedTest=predict(lasso, newdata = test)
fittedTest
RMSE_lasso_train=sqrt(mean((fitted(lasso)-Ytrain)^2))
Ytrain = train$SalePrice
fittedTest=predict(lasso, newdata = test)
RMSE_lasso_train=sqrt(mean((fitted(lasso)-Ytrain)^2))
RMSE_lasso_test=sqrt(mean((predict(lasso, newdata = test)-Ytest)^2))
Ytrain = train$SalePrice
Ytest= train$SalePrice
fittedTest=predict(lasso, newdata = test)
RMSE_lasso_train=sqrt(mean((fitted(lasso)-Ytrain)^2))
RMSE_lasso_test=sqrt(mean((predict(lasso, newdata = test)-Ytest)^2))
View(test)
train[-c(1299,524),]
train = select(train,-"Id")
test = select(test,-"Id")
Ytrain = train$SalePrice
Ytest= test$SalePrice
fittedTest=predict(lasso, newdata = test)
train[id != 1299),]
train[id != 1299,]
train[Id != 1299,]
train<-train[Id != 1299,]
train <- (train[Id != 1299,])
train <- train[which(Id != 1299),]
load("/Users/adrientoulouse/Desktop/Cours/1st Semester/Regression/House_prices_project/DataProject.RData")
train <- train[which(Id != 1299),]
View(train)
train <- train[which(Id != 1299),]
train <- train[which("Id" != 1299),]
load("/Users/adrientoulouse/Desktop/Cours/1st Semester/Regression/House_prices_project/DataProject.RData")
train <- train[which("Id" != 1299),]
load("/Users/adrientoulouse/Desktop/Cours/1st Semester/Regression/House_prices_project/DataProject.RData")
train <- train[which(Id != 1299),]
train <- subset(train, Id==4)
load("/Users/adrientoulouse/Desktop/Cours/1st Semester/Regression/House_prices_project/DataProject.RData")
train <- subset(train, Id!=1299)
train <- subset(train, Id!=c(1299,524)
train <- subset(train, Id!=c(1299,524))
train <- subset(train, Id!=524)
View(train)
View(train)
View(train)
